---
name: Tag and create release

on:
  push:
    branches: "main"
    # Release whenever this file changes
    paths:
      - "version.txt"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  tag-and-create-release:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch git tags
        run: git fetch --force --tags

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
          cache-dependency-path: src/n2o/go.sum

      - name: Read version name
        id: read-version
        run: |
          echo "version=$(cat ./version.txt)" > "$GITHUB_OUTPUT"

      - name: Create new tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          custom_tag: ${{ steps.read-version.outputs.version }}
          tag_prefix: ""  # To prevent extra "v" in the prefix
          github_token: ${{ secrets.GITHUB_TOKEN }}


      - name: build artifacts
        run: ./build_releases cmd/migrate/main.go n2o
        
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: false
          release_name: ${{ steps.read-version.outputs.version }}
          tag_name: ${{ steps.read-version.outputs.version }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
          
      - name: upload linux amd64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/n2o-linux-amd64/n2o-linux-amd64.tar.gz
          asset_name: n2o-linux-amd64.tar.gz
          asset_content_type: application/gzip
          
      - name: upload linux 386 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/n2o-linux-386/n2o-linux-386.tar.gz
          asset_name: n2o-linux-386.tar.gz
          asset_content_type: application/gzip
          
      - name: upload linux arm64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/n2o-linux-arm64/n2o-linux-arm64.tar.gz
          asset_name: n2o-linux-arm64.tar.gz
          asset_content_type: application/gzip
          
      - name: upload darwin amd64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/n2o-darwin-amd64/n2o-darwin-amd64.tar.gz
          asset_name: n2o-darwin-amd64.tar.gz
          asset_content_type: application/gzip
          
      - name: upload darwin arm64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/n2o-darwin-arm64/n2o-darwin-arm64.tar.gz
          asset_name: n2o-darwin-arm64.tar.gz
          asset_content_type: application/gzip
          
      - name: upload windows amd64 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/n2o-windows-amd64/n2o-windows-amd64.zip
          asset_name: n2o-windows-amd64.zip
          asset_content_type: application/zip
          
      - name: upload windows 386 artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/n2o-windows-386/n2o-windows-386.zip
          asset_name: n2o-windows-386.zip
          asset_content_type: application/zip
